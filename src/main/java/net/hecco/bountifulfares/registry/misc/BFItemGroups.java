package net.hecco.bountifulfares.registry.misc;

import net.fabricmc.fabric.api.itemgroup.v1.FabricItemGroup;
import net.hecco.bountifulfares.BountifulFares;
import net.hecco.bountifulfares.compat.appledog.AppledogBlocks;
import net.hecco.bountifulfares.registry.content.BFBlocks;
import net.hecco.bountifulfares.compat.arts_and_crafts.ArtsAndCraftsBlocks;
import net.hecco.bountifulfares.compat.dye_depot.DyeDepotBlocks;
import net.hecco.bountifulfares.compat.excessive_building.ExcessiveBuildingBlocks;
import net.hecco.bountifulfares.compat.mint.MintBlocks;
import net.hecco.bountifulfares.compat.natures_spirit.NaturesSpiritBlocks;
import net.hecco.bountifulfares.compat.spawn.SpawnBlocks;
import net.hecco.bountifulfares.compat.twigs.TwigsBlocks;
import net.hecco.bountifulfares.registry.content.BFItems;
import net.hecco.bountifulfares.registry.util.BFBlockTags;
import net.hecco.bountifulfares.trellis.TrellisUtil;
import net.hecco.bountifulfares.trellis.trellis_parts.TrellisVariant;
import net.hecco.bountifulfares.registry.content.BFPotions;
import net.minecraft.component.DataComponentTypes;
import net.minecraft.component.type.NbtComponent;
import net.minecraft.component.type.PotionContentsComponent;
import net.minecraft.entity.decoration.painting.PaintingEntity;
import net.minecraft.entity.decoration.painting.PaintingVariant;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.nbt.NbtElement;
import net.minecraft.nbt.NbtOps;
import net.minecraft.registry.*;
import net.minecraft.registry.entry.RegistryEntry;
import net.minecraft.text.Text;
import net.minecraft.util.Identifier;

import java.util.Comparator;
import java.util.Objects;
import java.util.function.Predicate;

public class BFItemGroups {

    private static final Comparator<RegistryEntry<PaintingVariant>> PAINTING_VARIANT_COMPARATOR = Comparator.comparing(RegistryEntry::value, Comparator.comparingInt((paintingVariant) -> 16 * 16));

    public static ItemGroup BOUNTIFUL_FARES = Registry.register(Registries.ITEM_GROUP, Identifier.of(BountifulFares.MOD_ID, "bountiful_fares"),
            FabricItemGroup.builder().displayName(Text.translatable("itemgroup.bountiful_fares"))
                    .icon(() -> new ItemStack(BFItems.PASSION_FRUIT)).entries((displayContext, entries) -> {
                        entries.add(BFBlocks.APPLE_LOG);
                        entries.add(BFBlocks.APPLE_WOOD);
                        entries.add(BFBlocks.STRIPPED_APPLE_LOG);
                        entries.add(BFBlocks.STRIPPED_APPLE_WOOD);
                        entries.add(BFBlocks.APPLE_LEAVES);
                        entries.add(BFBlocks.FLOWERING_APPLE_LEAVES);
                        entries.add(Items.APPLE);
                        entries.add(BFBlocks.APPLE_BLOCK);
                        entries.add(BFBlocks.APPLE_SAPLING);
                        entries.add(BFBlocks.ORANGE_LOG);
                        entries.add(BFBlocks.ORANGE_WOOD);
                        entries.add(BFBlocks.STRIPPED_ORANGE_LOG);
                        entries.add(BFBlocks.STRIPPED_ORANGE_WOOD);
                        entries.add(BFBlocks.ORANGE_LEAVES);
                        entries.add(BFBlocks.FLOWERING_ORANGE_LEAVES);
                        entries.add(BFItems.ORANGE);
                        entries.add(BFBlocks.ORANGE_BLOCK);
                        entries.add(BFBlocks.ORANGE_SAPLING);
                        entries.add(BFBlocks.LEMON_LOG);
                        entries.add(BFBlocks.LEMON_WOOD);
                        entries.add(BFBlocks.STRIPPED_LEMON_LOG);
                        entries.add(BFBlocks.STRIPPED_LEMON_WOOD);
                        entries.add(BFBlocks.LEMON_LEAVES);
                        entries.add(BFBlocks.FLOWERING_LEMON_LEAVES);
                        entries.add(BFItems.LEMON);
                        entries.add(BFBlocks.LEMON_BLOCK);
                        entries.add(BFBlocks.LEMON_SAPLING);
                        entries.add(BFBlocks.PLUM_LOG);
                        entries.add(BFBlocks.PLUM_WOOD);
                        entries.add(BFBlocks.STRIPPED_PLUM_LOG);
                        entries.add(BFBlocks.STRIPPED_PLUM_WOOD);
                        entries.add(BFBlocks.PLUM_LEAVES);
                        entries.add(BFBlocks.FLOWERING_PLUM_LEAVES);
                        entries.add(BFItems.PLUM);
                        entries.add(BFBlocks.PLUM_BLOCK);
                        entries.add(BFBlocks.PLUM_SAPLING);
                        entries.add(BFBlocks.GOLDEN_APPLE_LOG);
                        entries.add(BFBlocks.GOLDEN_APPLE_WOOD);
                        entries.add(BFBlocks.GOLDEN_APPLE_LEAVES);
                        entries.add(BFBlocks.FLOWERING_GOLDEN_APPLE_LEAVES);
                        entries.add(Items.GOLDEN_APPLE);
                        entries.add(BFBlocks.GOLDEN_APPLE_BLOCK);
                        entries.add(BFBlocks.GOLDEN_APPLE_SAPLING);
                        entries.add(BFBlocks.HOARY_APPLE_SAPLING);
                        entries.add(BFBlocks.HOARY_LOG);
                        entries.add(BFBlocks.HOARY_WOOD);
                        entries.add(BFBlocks.STRIPPED_HOARY_LOG);
                        entries.add(BFBlocks.STRIPPED_HOARY_WOOD);
                        entries.add(BFBlocks.HOARY_PLANKS);
                        entries.add(BFBlocks.HOARY_STAIRS);
                        entries.add(ExcessiveBuildingBlocks.HOARY_VERTICAL_STAIRS);
                        entries.add(BFBlocks.HOARY_SLAB);
                        entries.add(TwigsBlocks.HOARY_TABLE);
                        entries.add(BFBlocks.HOARY_FENCE);
                        entries.add(BFBlocks.HOARY_FENCE_GATE);
                        entries.add(BFBlocks.HOARY_DOOR);
                        entries.add(BFBlocks.HOARY_TRAPDOOR);
                        entries.add(BFBlocks.HOARY_PRESSURE_PLATE);
                        entries.add(BFBlocks.HOARY_BUTTON);
                        entries.add(BFItems.HOARY_SIGN);
                        entries.add(BFItems.HOARY_HANGING_SIGN);
                        entries.add(BFItems.HOARY_BOAT);
                        entries.add(BFItems.HOARY_CHEST_BOAT);
//                        entries.add(FarmersDelightBlocks.HOARY_CABINET);
                        entries.add(ExcessiveBuildingBlocks.CHISELED_HOARY_PLANKS);
                        entries.add(ExcessiveBuildingBlocks.HOARY_MOSAIC);
                        entries.add(ExcessiveBuildingBlocks.HOARY_MOSAIC_STAIRS);
                        entries.add(ExcessiveBuildingBlocks.HOARY_MOSAIC_VERTICAL_STAIRS);
                        entries.add(ExcessiveBuildingBlocks.HOARY_MOSAIC_SLAB);
                        entries.add(ExcessiveBuildingBlocks.HOARY_LADDER);
                        entries.add(BFBlocks.HOARY_LEAVES);
                        entries.add(BFItems.HOARY_APPLE);
                        entries.add(BFBlocks.HOARY_APPLE_BLOCK);
                        entries.add(BFBlocks.WALNUT_SAPLING);
                        entries.add(BFBlocks.WALNUT_LOG);
                        entries.add(BFBlocks.WALNUT_WOOD);
                        entries.add(BFBlocks.STRIPPED_WALNUT_LOG);
                        entries.add(BFBlocks.STRIPPED_WALNUT_WOOD);
                        entries.add(BFBlocks.WALNUT_PLANKS);
                        entries.add(BFBlocks.WALNUT_STAIRS);
                        entries.add(ExcessiveBuildingBlocks.WALNUT_VERTICAL_STAIRS);
                        entries.add(BFBlocks.WALNUT_SLAB);
                        entries.add(TwigsBlocks.WALNUT_TABLE);
                        entries.add(BFBlocks.WALNUT_FENCE);
                        entries.add(BFBlocks.WALNUT_FENCE_GATE);
                        entries.add(BFBlocks.WALNUT_DOOR);
                        entries.add(BFBlocks.WALNUT_TRAPDOOR);
                        entries.add(BFBlocks.WALNUT_PRESSURE_PLATE);
                        entries.add(BFBlocks.WALNUT_BUTTON);
                        entries.add(BFItems.WALNUT_SIGN);
                        entries.add(BFItems.WALNUT_HANGING_SIGN);
                        entries.add(BFItems.WALNUT_BOAT);
                        entries.add(BFItems.WALNUT_CHEST_BOAT);
//                        entries.add(FarmersDelightBlocks.WALNUT_CABINET);
                        entries.add(ExcessiveBuildingBlocks.CHISELED_WALNUT_PLANKS);
                        entries.add(ExcessiveBuildingBlocks.WALNUT_MOSAIC);
                        entries.add(ExcessiveBuildingBlocks.WALNUT_MOSAIC_STAIRS);
                        entries.add(ExcessiveBuildingBlocks.WALNUT_MOSAIC_VERTICAL_STAIRS);
                        entries.add(ExcessiveBuildingBlocks.WALNUT_MOSAIC_SLAB);
                        entries.add(ExcessiveBuildingBlocks.WALNUT_LADDER);
                        entries.add(BFBlocks.WALNUT_LEAVES);
                        entries.add(BFItems.WALNUT);
                        entries.add(BFBlocks.WALNUT_MULCH);
                        entries.add(BFBlocks.WALNUT_MULCH_BLOCK);
                        entries.add(ExcessiveBuildingBlocks.WALNUT_MULCH_BRICKS);
                        entries.add(ExcessiveBuildingBlocks.WALNUT_MULCH_BRICK_STAIRS);
                        entries.add(ExcessiveBuildingBlocks.WALNUT_MULCH_BRICK_SLAB);
                        entries.add(ExcessiveBuildingBlocks.WALNUT_MULCH_BRICK_WALL);
                        entries.add(BFBlocks.PALM_LOG);
                        entries.add(BFBlocks.PALM_WOOD);
                        entries.add(BFBlocks.STRIPPED_PALM_LOG);
                        entries.add(BFBlocks.STRIPPED_PALM_WOOD);
                        entries.add(BFBlocks.PALM_CROWN);
                        entries.add(BFItems.PALM_FROND);
                        entries.add(BFItems.COCONUT);
                        entries.add(BFItems.COCONUT_HALF);
                        entries.add(BFBlocks.COCONUT_CANDLE);
                        entries.add(BFItems.COCONUT_COIR);
                        entries.add(BFBlocks.PACKED_COCONUT_COIR);
                        entries.add(BFBlocks.COIR_CARPET);
                        entries.add(BFBlocks.COIR_BRICKS);
                        entries.add(BFBlocks.COIR_BRICK_STAIRS);
                        entries.add(BFBlocks.COIR_BRICK_SLAB);
                        entries.add(BFBlocks.COIR_BRICK_WALL);
                        entries.add(BFBlocks.PALM_MULCH);
                        entries.add(BFBlocks.PALM_MULCH_BLOCK);
                        entries.add(ExcessiveBuildingBlocks.PALM_MULCH_BRICKS);
                        entries.add(ExcessiveBuildingBlocks.PALM_MULCH_BRICK_STAIRS);
                        entries.add(ExcessiveBuildingBlocks.PALM_MULCH_BRICK_SLAB);
                        entries.add(ExcessiveBuildingBlocks.PALM_MULCH_BRICK_WALL);
                        entries.add(BFBlocks.OAK_PICKETS);
                        entries.add(BFBlocks.SPRUCE_PICKETS);
                        entries.add(BFBlocks.BIRCH_PICKETS);
                        entries.add(BFBlocks.JUNGLE_PICKETS);
                        entries.add(BFBlocks.ACACIA_PICKETS);
                        entries.add(BFBlocks.DARK_OAK_PICKETS);
                        entries.add(BFBlocks.MANGROVE_PICKETS);
                        entries.add(BFBlocks.CHERRY_PICKETS);
                        entries.add(BFBlocks.BAMBOO_PICKETS);
                        entries.add(BFBlocks.WALNUT_PICKETS);

                        entries.add(MintBlocks.WINTERGREEN_PICKETS);

                        entries.add(NaturesSpiritBlocks.REDWOOD_PICKETS);
                        entries.add(NaturesSpiritBlocks.SUGI_PICKETS);
                        entries.add(NaturesSpiritBlocks.WISTERIA_PICKETS);
                        entries.add(NaturesSpiritBlocks.FIR_PICKETS);
                        entries.add(NaturesSpiritBlocks.WILLOW_PICKETS);
                        entries.add(NaturesSpiritBlocks.ASPEN_PICKETS);
                        entries.add(NaturesSpiritBlocks.MAPLE_PICKETS);
                        entries.add(NaturesSpiritBlocks.CYPRESS_PICKETS);
                        entries.add(NaturesSpiritBlocks.OLIVE_PICKETS);
                        entries.add(NaturesSpiritBlocks.JOSHUA_PICKETS);
                        entries.add(NaturesSpiritBlocks.GHAF_PICKETS);
                        entries.add(NaturesSpiritBlocks.PALO_VERDE_PICKETS);
                        entries.add(NaturesSpiritBlocks.COCONUT_PICKETS);
                        entries.add(NaturesSpiritBlocks.CEDAR_PICKETS);
                        entries.add(NaturesSpiritBlocks.LARCH_PICKETS);
                        entries.add(NaturesSpiritBlocks.MAHOGANY_PICKETS);
                        entries.add(NaturesSpiritBlocks.SAXAUL_PICKETS);

                        entries.add(ExcessiveBuildingBlocks.ANCIENT_PICKETS);

                        entries.add(SpawnBlocks.ROTTEN_PICKETS);

                        entries.add(ArtsAndCraftsBlocks.CORK_PICKETS);

                        entries.add(BFBlocks.HOARY_PICKETS);
                        entries.add(BFBlocks.CRIMSON_PICKETS);
                        entries.add(BFBlocks.WARPED_PICKETS);
                        entries.add(BFBlocks.IRON_RAILING);
                        entries.add(BFItems.FELDSPAR);
                        entries.add(BFBlocks.FELDSPAR_BLOCK);
                        entries.add(BFBlocks.CUT_FELDSPAR_BLOCK);
                        entries.add(BFBlocks.FELDSPAR_BRICKS);
                        entries.add(BFBlocks.FELDSPAR_BRICK_STAIRS);
                        entries.add(ExcessiveBuildingBlocks.FELDSPAR_BRICK_VERTICAL_STAIRS);
                        entries.add(BFBlocks.FELDSPAR_BRICK_SLAB);
                        entries.add(BFBlocks.FELDSPAR_LANTERN);
                        entries.add(TwigsBlocks.FELDSPAR_LAMP);
                        entries.add(BFBlocks.TINGED_GLASS);
                        entries.add(BFItems.CERAMIC_CLAY);
                        entries.add(BFBlocks.CERAMIC_CLAY_BLOCK);
                        entries.add(BFItems.CERAMIC_TILE);
                        entries.add(BFBlocks.CERAMIC_TILES);
                        entries.add(BFBlocks.CERAMIC_TILE_STAIRS);
                        entries.add(ExcessiveBuildingBlocks.CERAMIC_TILE_VERTICAL_STAIRS);
                        entries.add(BFBlocks.CERAMIC_TILE_SLAB);
                        entries.add(BFBlocks.CRACKED_CERAMIC_TILES);
                        entries.add(BFBlocks.CERAMIC_TILE_PILLAR);
                        entries.add(BFBlocks.CERAMIC_MOSAIC);
                        entries.add(BFBlocks.CERAMIC_MOSAIC_STAIRS);
                        entries.add(ExcessiveBuildingBlocks.CERAMIC_MOSAIC_VERTICAL_STAIRS);
                        entries.add(BFBlocks.CERAMIC_MOSAIC_SLAB);
                        entries.add(BFBlocks.CERAMIC_DOOR);
                        entries.add(BFBlocks.CERAMIC_TRAPDOOR);
                        entries.add(BFBlocks.CERAMIC_PRESSURE_PLATE);
                        entries.add(BFBlocks.CERAMIC_BUTTON);
                        entries.add(BFBlocks.CERAMIC_LEVER);
                        entries.add(BFBlocks.CERAMIC_DISH);
                        entries.add(BFItems.ARTISAN_BRUSH);
                        entries.add(BFItems.SUN_HAT);

                        entries.add(BFBlocks.WHITE_JACK_O_STRAW);
                        entries.add(BFBlocks.LIGHT_GRAY_JACK_O_STRAW);
                        entries.add(BFBlocks.GRAY_JACK_O_STRAW);
                        entries.add(BFBlocks.BLACK_JACK_O_STRAW);
                        entries.add(MintBlocks.ACORN_JACK_O_STRAW);
                        entries.add(BFBlocks.BROWN_JACK_O_STRAW);
                        entries.add(MintBlocks.MAROON_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.MAROON_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.ROSE_JACK_O_STRAW);
                        entries.add(BFBlocks.RED_JACK_O_STRAW);
                        entries.add(MintBlocks.PEACH_JACK_O_STRAW);
                        entries.add(MintBlocks.VERMILION_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.CORAL_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.GINGER_JACK_O_STRAW);
                        entries.add(BFBlocks.ORANGE_JACK_O_STRAW);
                        entries.add(MintBlocks.AMBER_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.TAN_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.BEIGE_JACK_O_STRAW);
                        entries.add(BFBlocks.YELLOW_JACK_O_STRAW);
                        entries.add(MintBlocks.BANANA_JACK_O_STRAW);
                        entries.add(MintBlocks.ARTICHOKE_JACK_O_STRAW);
                        entries.add(MintBlocks.MOLD_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.AMBER_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.OLIVE_JACK_O_STRAW);
                        entries.add(BFBlocks.LIME_JACK_O_STRAW);
                        entries.add(MintBlocks.SAGE_JACK_O_STRAW);
                        entries.add(MintBlocks.SAP_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.FOREST_JACK_O_STRAW);
                        entries.add(BFBlocks.GREEN_JACK_O_STRAW);
                        entries.add(MintBlocks.SHAMROCK_JACK_O_STRAW);
                        entries.add(MintBlocks.MINT_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.VERDANT_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.TEAL_JACK_O_STRAW);
                        entries.add(BFBlocks.CYAN_JACK_O_STRAW);
                        entries.add(MintBlocks.CERULEAN_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.MINT_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.AQUA_JACK_O_STRAW);
                        entries.add(BFBlocks.LIGHT_BLUE_JACK_O_STRAW);
                        entries.add(MintBlocks.NAVY_JACK_O_STRAW);
                        entries.add(BFBlocks.BLUE_JACK_O_STRAW);
                        entries.add(MintBlocks.PERIWINKLE_JACK_O_STRAW);
                        entries.add(MintBlocks.GRAPE_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.SLATE_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.NAVY_JACK_O_STRAW);
                        entries.add(DyeDepotBlocks.INDIGO_JACK_O_STRAW);
                        entries.add(BFBlocks.PURPLE_JACK_O_STRAW);
                        entries.add(MintBlocks.INDIGO_JACK_O_STRAW);
                        entries.add(BFBlocks.MAGENTA_JACK_O_STRAW);
                        entries.add(MintBlocks.MAUVE_JACK_O_STRAW);
                        entries.add(MintBlocks.VELVET_JACK_O_STRAW);
                        entries.add(MintBlocks.FUCHSIA_JACK_O_STRAW);
                        entries.add(BFBlocks.PINK_JACK_O_STRAW);
                        entries.add(BFBlocks.GRASSY_DIRT);
                        entries.add(BFBlocks.WILD_WHEAT);
                        entries.add(BFBlocks.WILD_CARROTS);
                        entries.add(BFBlocks.WILD_POTATOES);
                        entries.add(BFBlocks.WILD_BEETROOTS);
                        entries.add(BFBlocks.WILD_MAIZE);
                        entries.add(BFBlocks.WILD_LEEKS);
                        entries.add(BFBlocks.WILD_PASSION_FRUIT_VINE);
                        entries.add(BFBlocks.WILD_ELDERBERRY_VINE);
                        entries.add(BFItems.GRASS_SEEDS);
                        entries.add(BFItems.SWEET_BERRY_PIPS);
                        entries.add(BFItems.MAIZE_SEEDS);
                        entries.add(BFItems.LEEK_SEEDS);
                        entries.add(BFItems.SPONGEKIN_SEEDS);
                        entries.add(BFItems.LAPISBERRY_SEEDS);
                        entries.add(BFItems.HOARY_SEEDS);
                        entries.add(BFItems.MAIZE);
                        entries.add(BFItems.LEEK);
                        for (TrellisVariant trellis : TrellisUtil.TrellisVariants) {
                            if (Objects.equals(trellis.getModId(), BountifulFares.MOD_ID)) {
                                if (TrellisUtil.getTrellisFromVariant(trellis) != null) {
                                    entries.add(TrellisUtil.getTrellisFromVariant(trellis));
                                }
                            }
                        }
                        entries.add(TrellisUtil.getTrellisFromVariant(MintBlocks.WINTERGREEN));
                        if (BountifulFares.isModLoaded(BountifulFares.NATURES_SPIRIT_MOD_ID)) {
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.REDWOOD));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.SUGI));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.WISTERIA));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.FIR));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.WILLOW));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.ASPEN));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.MAPLE));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.CYPRESS));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.OLIVE));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.JOSHUA));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.GHAF));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.PALO_VERDE));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.COCONUT));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.CEDAR));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.LARCH));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.MAHOGANY));
                            entries.add(TrellisUtil.getTrellisFromVariant(NaturesSpiritBlocks.SAXAUL));
                        }
                        entries.add(TrellisUtil.getTrellisFromVariant(ExcessiveBuildingBlocks.ANCIENT));
                        entries.add(TrellisUtil.getTrellisFromVariant(SpawnBlocks.ROTTEN));
                        entries.add(TrellisUtil.getTrellisFromVariant(ArtsAndCraftsBlocks.CORK));
//                        if (BountifulFares.isModLoaded(BountifulFares.WILDER_WILD_MOD_ID)) {
//                            entries.add(TrellisUtil.getTrellisFromVariant(BFTrellises.BAOBAB));
//                            entries.add(TrellisUtil.getTrellisFromVariant(BFTrellises.WW_CYPRESS));
//                            entries.add(TrellisUtil.getTrellisFromVariant(BFTrellises.PALM));
//                        }
                        entries.add(BFItems.PASSION_FRUIT);
                        entries.add(BFItems.ELDERBERRIES);
                        entries.add(BFItems.LAPISBERRIES);
                        entries.add(BFItems.TEA_BERRIES);
                        entries.add(BFItems.TEA_LEAVES);
                        entries.add(BFItems.DRIED_TEA_LEAVES);
                        entries.add(BFBlocks.CHAMOMILE_FLOWERS);
                        entries.add(BFBlocks.HONEYSUCKLE);
                        entries.add(BFBlocks.VIOLET_BELLFLOWER);
                        entries.add(BFBlocks.SPONGEKIN);
                        entries.add(BFItems.SPONGEKIN_SLICE);
                        entries.add(BFBlocks.PRISMARINE_BLOSSOM);
                        entries.add(BFBlocks.GRISTMILL);
                        entries.add(BFItems.FLOUR);
                        entries.add(BFItems.GREEN_TEA_BLEND);
                        entries.add(BFItems.BLACK_TEA_BLEND);
                        entries.add(BFItems.CHAMOMILE_TEA_BLEND);
                        entries.add(BFItems.HONEYSUCKLE_TEA_BLEND);
                        entries.add(BFItems.BELLFLOWER_TEA_BLEND);
                        entries.add(BFItems.TORCHFLOWER_TEA_BLEND);
                        entries.add(BFItems.GREEN_TEA_BOTTLE);
                        entries.add(BFItems.BLACK_TEA_BOTTLE);
                        entries.add(BFItems.CHAMOMILE_TEA_BOTTLE);
                        entries.add(BFItems.HONEYSUCKLE_TEA_BOTTLE);
                        entries.add(BFItems.BELLFLOWER_TEA_BOTTLE);
                        entries.add(BFItems.TORCHFLOWER_TEA_BOTTLE);
                        entries.add(BFBlocks.GREEN_TEA_CANDLE);
                        entries.add(BFBlocks.BLACK_TEA_CANDLE);
                        entries.add(BFBlocks.CHAMOMILE_CANDLE);
                        entries.add(BFBlocks.HONEYSUCKLE_CANDLE);
                        entries.add(BFBlocks.BELLFLOWER_CANDLE);
                        entries.add(BFBlocks.TORCHFLOWER_CANDLE);
                        entries.add(BFBlocks.WALNUT_CANDLE);
                        entries.add(BFBlocks.FERMENTATION_VESSEL);
                        entries.add(BFItems.ELDERBERRY_WINE_BOTTLE);
                        entries.add(BFItems.LAPISBERRY_WINE_BOTTLE);
                        entries.add(BFItems.MEAD_BOTTLE);
                        entries.add(BFItems.JAR);
                        entries.add(BFItems.APPLE_CIDER_JAR);
                        entries.add(BFItems.PLUM_CIDER_JAR);
                        entries.add(BFItems.HOARY_CIDER_JAR);
                        entries.add(BFItems.APPLE_COMPOTE_JAR);
                        entries.add(BFItems.ORANGE_COMPOTE_JAR);
                        entries.add(BFItems.LEMON_COMPOTE_JAR);
                        entries.add(BFItems.PLUM_COMPOTE_JAR);
                        entries.add(BFItems.HOARY_COMPOTE_JAR);
                        entries.add(BFItems.CITRUS_ESSENCE);
                        entries.add(BFItems.PICKLED_SPONGEKIN);
                        entries.add(PotionContentsComponent.createStack(Items.POTION, BFPotions.ACIDIC));
                        entries.add(PotionContentsComponent.createStack(Items.POTION, BFPotions.LONG_ACIDIC));
                        entries.add(PotionContentsComponent.createStack(Items.POTION, BFPotions.STRONG_ACIDIC));
                        entries.add(PotionContentsComponent.createStack(Items.SPLASH_POTION, BFPotions.ACIDIC));
                        entries.add(PotionContentsComponent.createStack(Items.SPLASH_POTION, BFPotions.LONG_ACIDIC));
                        entries.add(PotionContentsComponent.createStack(Items.SPLASH_POTION, BFPotions.STRONG_ACIDIC));
                        entries.add(PotionContentsComponent.createStack(Items.LINGERING_POTION, BFPotions.ACIDIC));
                        entries.add(PotionContentsComponent.createStack(Items.LINGERING_POTION, BFPotions.LONG_ACIDIC));
                        entries.add(PotionContentsComponent.createStack(Items.LINGERING_POTION, BFPotions.STRONG_ACIDIC));
                        entries.add(PotionContentsComponent.createStack(Items.TIPPED_ARROW, BFPotions.ACIDIC));
                        entries.add(PotionContentsComponent.createStack(Items.TIPPED_ARROW, BFPotions.LONG_ACIDIC));
                        entries.add(PotionContentsComponent.createStack(Items.TIPPED_ARROW, BFPotions.STRONG_ACIDIC));
                        entries.add(PotionContentsComponent.createStack(Items.POTION, BFPotions.STUPOR));
                        entries.add(PotionContentsComponent.createStack(Items.POTION, BFPotions.LONG_STUPOR));
                        entries.add(PotionContentsComponent.createStack(Items.SPLASH_POTION, BFPotions.STUPOR));
                        entries.add(PotionContentsComponent.createStack(Items.SPLASH_POTION, BFPotions.LONG_STUPOR));
                        entries.add(PotionContentsComponent.createStack(Items.LINGERING_POTION, BFPotions.STUPOR));
                        entries.add(PotionContentsComponent.createStack(Items.LINGERING_POTION, BFPotions.LONG_STUPOR));
                        entries.add(PotionContentsComponent.createStack(Items.TIPPED_ARROW, BFPotions.STUPOR));
                        entries.add(PotionContentsComponent.createStack(Items.TIPPED_ARROW, BFPotions.LONG_STUPOR));
                        entries.add(BFBlocks.ARTISAN_BREAD);
                        entries.add(BFItems.ARTISAN_COOKIE);
                        entries.add(BFBlocks.APPLE_PIE);
                        entries.add(BFBlocks.ORANGE_PIE);
                        entries.add(BFBlocks.LEMON_PIE);
                        entries.add(BFBlocks.PLUM_PIE);
                        entries.add(BFBlocks.HOARY_PIE);
                        entries.add(BFBlocks.PASSION_FRUIT_TART);
                        entries.add(BFBlocks.ELDERBERRY_TART);
                        entries.add(BFBlocks.GLOW_BERRY_TART);
                        entries.add(BFBlocks.SWEET_BERRY_TART);
                        entries.add(BFBlocks.LAPISBERRY_TART);
                        entries.add(BFBlocks.COCOA_CAKE);
                        entries.add(BFBlocks.COCONUT_CAKE);
                        entries.add(BFItems.WALNUT_COOKIE);
                        entries.add(BFItems.MAIZE_BREAD);
                        entries.add(BFItems.FOREST_MEDLEY);
                        entries.add(BFItems.ARID_MEDLEY);
                        entries.add(BFItems.MEADOW_MEDLEY);
                        entries.add(BFItems.COASTAL_MEDLEY);
                        entries.add(BFItems.TROPICAL_MEDLEY);
                        entries.add(BFItems.MUSHROOM_STUFFED_POTATO);
                        entries.add(BFItems.BERRY_STUFFED_POTATO);
                        entries.add(BFItems.MAIZE_STUFFED_POTATO);
                        entries.add(BFItems.LEEK_STEW);
                        entries.add(BFItems.FISH_STEW);
                        entries.add(BFItems.APPLE_STEW);
                        entries.add(BFItems.COCONUT_STEW);
                        entries.add(BFItems.STONE_STEW);
                        entries.add(BFItems.BOUNTIFUL_STEW);
                        entries.add(BFItems.PASSION_GLAZED_SALMON);
                        entries.add(BFItems.COCONUT_CRUSTED_COD);
                        entries.add(BFItems.CRUSTED_BEEF);
                        entries.add(BFItems.CRIMSON_CHOW);
                        entries.add(BFItems.WARPED_CHOW);
                        entries.add(BFItems.CUSTARD);
                        entries.add(BFItems.PIQUANT_CUSTARD);
                        entries.add(BFItems.PASSION_CUSTARD);
                        entries.add(BFItems.COCOA_CUSTARD);
                        entries.add(BFItems.ANCIENT_CUSTARD);
                        entries.add(BFItems.CANDY);
                        entries.add(BFItems.PIQUANT_CANDY);
                        entries.add(BFItems.SOUR_CANDY);
                        entries.add(BFItems.BITTER_CANDY);
                        entries.add(BFItems.CANDIED_APPLE);
                        entries.add(BFItems.CANDIED_PLUM);
                        entries.add(BFItems.CANDIED_ORANGE);
                        entries.add(BFItems.CANDIED_LEMON);
//                        displayContext.lookup().getOptionalWrapper(RegistryKeys.PAINTING_VARIANT).ifPresent((wrapper) -> {
//                            addPaintings(entries, wrapper, (registryEntry) -> registryEntry.isIn(BFBlockTags.PAINTINGS), ItemGroup.StackVisibility.PARENT_AND_SEARCH_TABS);
//                        });
                        displayContext.lookup().getOptionalWrapper(RegistryKeys.PAINTING_VARIANT).ifPresent((registryWrapper) -> {
                            addPaintings(entries, displayContext.lookup(), registryWrapper, (registryEntry) -> registryEntry.isIn(BFBlockTags.PAINTINGS), ItemGroup.StackVisibility.PARENT_AND_SEARCH_TABS);
                        });

                        entries.add(AppledogBlocks.APPLEDOG_BLOCK);
                    }).build());

    private static void addPaintings(ItemGroup.Entries entries, RegistryWrapper.WrapperLookup registryLookup, RegistryWrapper.Impl<PaintingVariant> registryWrapper, Predicate<RegistryEntry<PaintingVariant>> filter, ItemGroup.StackVisibility stackVisibility) {
        RegistryOps<NbtElement> registryOps = registryLookup.getOps(NbtOps.INSTANCE);
        registryWrapper.streamEntries().filter(filter).sorted(PAINTING_VARIANT_COMPARATOR).forEach((paintingVariantEntry) -> {
            NbtComponent nbtComponent = NbtComponent.DEFAULT.with(registryOps, PaintingEntity.VARIANT_MAP_CODEC, paintingVariantEntry).getOrThrow().apply((nbt) -> {
                nbt.putString("id", "minecraft:painting");
            });
            ItemStack itemStack = new ItemStack(Items.PAINTING);
            itemStack.set(DataComponentTypes.ENTITY_DATA, nbtComponent);
            entries.add(itemStack, stackVisibility);
        });
    }
    public static void registerItemGroups() {
//        BountifulFares.LOGGER.info("Registering Item Group Entries for " + BountifulFares.MOD_ID);
    }
}
